C51 COMPILER V9.52.0.0   DATASCOPE_DP                                                      09/10/2017 12:03:09 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE DATASCOPE_DP
OBJECT MODULE PLACED IN DataScope_DP.OBJ
COMPILER INVOKED BY: D:\c51v952\C51\BIN\C51.EXE DataScope_DP.C LARGE BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1           
   2          #include "DataScope_DP.h"
   3          unsigned char DataScope_OutPut_Buffer[42] = {0};     //´®¿Ú·¢ËÍ»º³åÇø
   4          
   5          
   6          //º¯ÊýËµÃ÷£º½«µ¥¾«¶È¸¡µãÊý¾Ý×ª³É4×Ö½ÚÊý¾Ý²¢´æÈëÖ¸¶¨µØÖ· 
   7          //¸½¼ÓËµÃ÷£ºÓÃ»§ÎÞÐèÖ±½Ó²Ù×÷´Ëº¯Êý 
   8          //target:Ä¿±êµ¥¾«¶ÈÊý¾Ý
   9          //buf:´ýÐ´ÈëÊý×é
  10          //beg:Ö¸¶¨´ÓÊý×éµÚ¼¸¸öÔªËØ¿ªÊ¼Ð´Èë
  11          //º¯ÊýÎÞ·µ»Ø 
  12          void Float2Byte(float *target,unsigned char *buf,unsigned char beg)
  13          {
  14   1          unsigned char *point;
  15   1          point = (unsigned char*)target;   //µÃµ½floatµÄµØÖ·
  16   1          buf[beg]   = point[3];
  17   1          buf[beg+1] = point[2];
  18   1          buf[beg+2] = point[1];
  19   1          buf[beg+3] = point[0];
  20   1      }
  21           
  22           
  23          //º¯ÊýËµÃ÷£º½«´ý·¢ËÍÍ¨µÀµÄµ¥¾«¶È¸¡µãÊý¾ÝÐ´Èë·¢ËÍ»º³åÇø
  24          //Data£ºÍ¨µÀÊý¾Ý
  25          //Channel£ºÑ¡ÔñÍ¨µÀ£¨1-10£©
  26          //º¯ÊýÎÞ·µ»Ø 
  27          void DataScope_Get_Channel_Data(float Data,unsigned char Channel)
  28          {
  29   1        if ( (Channel > 10) || (Channel == 0) ) return;  //Í¨µÀ¸öÊý´óÓÚ10»òµÈÓÚ0£¬Ö±½ÓÌø³ö£¬²»Ö´ÐÐº¯Êý
  30   1        else
  31   1        {
  32   2           switch (Channel)
  33   2          {
  34   3            case 1:  Float2Byte(&Data,DataScope_OutPut_Buffer,1); break;
  35   3            case 2:  Float2Byte(&Data,DataScope_OutPut_Buffer,5); break;
  36   3            case 3:  Float2Byte(&Data,DataScope_OutPut_Buffer,9); break;
  37   3            case 4:  Float2Byte(&Data,DataScope_OutPut_Buffer,13); break;
  38   3            case 5:  Float2Byte(&Data,DataScope_OutPut_Buffer,17); break;
  39   3            case 6:  Float2Byte(&Data,DataScope_OutPut_Buffer,21); break;
  40   3            case 7:  Float2Byte(&Data,DataScope_OutPut_Buffer,25); break;
  41   3            case 8:  Float2Byte(&Data,DataScope_OutPut_Buffer,29); break;
  42   3            case 9:  Float2Byte(&Data,DataScope_OutPut_Buffer,33); break;
  43   3            case 10: Float2Byte(&Data,DataScope_OutPut_Buffer,37); break;
  44   3          }
  45   2        }  
  46   1      }
  47          
  48          
  49          //º¯ÊýËµÃ÷£ºÉú³É DataScopeV1.0 ÄÜÕýÈ·Ê¶±ðµÄÖ¡¸ñÊ½
  50          //Channel_Number£¬ÐèÒª·¢ËÍµÄÍ¨µÀ¸öÊý
  51          //·µ»Ø·¢ËÍ»º³åÇøÊý¾Ý¸öÊý
  52          //·µ»Ø0±íÊ¾Ö¡¸ñÊ½Éú³ÉÊ§°Ü 
  53          unsigned char DataScope_Data_Generate(unsigned char Channel_Number)
  54          {
  55   1        if ( (Channel_Number > 10) || (Channel_Number == 0) ) { return 0; }  //Í¨µÀ¸öÊý´óÓÚ10»òµÈÓÚ0£¬Ö±½ÓÌø³ö£¬²
C51 COMPILER V9.52.0.0   DATASCOPE_DP                                                      09/10/2017 12:03:09 PAGE 2   

             -»Ö´ÐÐº¯Êý
  56   1        else
  57   1        { 
  58   2         DataScope_OutPut_Buffer[0] = '$';  //Ö¡Í·
  59   2          
  60   2         switch(Channel_Number)   
  61   2         { 
  62   3           case 1:   DataScope_OutPut_Buffer[5]  =  5; return  6;  
  63   3           case 2:   DataScope_OutPut_Buffer[9]  =  9; return 10;
  64   3           case 3:   DataScope_OutPut_Buffer[13] = 13; return 14; 
  65   3           case 4:   DataScope_OutPut_Buffer[17] = 17; return 18;
  66   3           case 5:   DataScope_OutPut_Buffer[21] = 21; return 22;  
  67   3           case 6:   DataScope_OutPut_Buffer[25] = 25; return 26;
  68   3           case 7:   DataScope_OutPut_Buffer[29] = 29; return 30; 
  69   3           case 8:   DataScope_OutPut_Buffer[33] = 33; return 34; 
  70   3           case 9:   DataScope_OutPut_Buffer[37] = 37; return 38;
  71   3           case 10:  DataScope_OutPut_Buffer[41] = 41; return 42; 
  72   3         }   
  73   2        }
  74   1        return 0;
  75   1      }
  76          
  77          
  78          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    643    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     42      15
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
